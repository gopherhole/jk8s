---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: jk8s-cluster
spec:
  compositeTypeRef:
    apiVersion: jk8s.io/v1beta1
    kind: XCluster

  patchSets:
    - name: common-parameters
      patches:
        - fromFieldPath: "spec.parameters.region"
          toFieldPath: "spec.parameters.region"
        - fromFieldPath: "spec.parameters.environment"
          toFieldPath: "spec.parameters.environment"
        - fromFieldPath: "spec.parameters.name"
          toFieldPath: "spec.parameters.name"            

  resources:

    - name: cluster-vpc
      base:
        apiVersion: aws.jk8s.io/v1beta1
        kind: XClusterVPC
      patches:    
        - type: PatchSet
          patchSetName: common-parameters      
        
    - name: eks-cluster
      base:
        apiVersion: aws.jk8s.io/v1beta1
        kind: XEKSCluster
      patches:    
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: "spec.parameters.name"
          toFieldPath: "spec.parameters.vpcName"


    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              namespace: crossplane-system
              key: kubeconfig
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
        - fromFieldPath: "metadata.uid"
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-ekscluster-connection"
      readinessChecks:
        - type: None

    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations: 
            crossplane.io/external-name: bootstrap
        spec:
          forProvider:
            chart:
              name: bootstrap
              repository: https://jdotw.github.io/jk8s
            namespace: jk8s
            values:
              # persistence:
              #   enabled: false
              # mariadb:
              #   enabled: false
              # externalDatabase:
              #   create: true
              #   database: wordpress
              #   port: 3306

              platform:
                dns:
                  fqdn: ${FQDN}
                  externalDNS:
                    enabled: true
                    zoneID: ${ZONE_ID}
                    aws:
                      serviceAccountName: external-dns
                tls:
                  certManager:
                    enabled: true
                    email: admin@${FQDN}
                    aws:
                      serviceAccountName: cert-manager
                    selfSigned:
                      enabled: false
                    letsEncrypt:
                      staging:
                        enabled: true
                        email: admin@${FQDN}
                        route53:
                          zoneID: ${ZONE_ID}
                secrets:
                  externalSecrets:
                    enabled: true
                    rdsSecretName: ${RDS_SECRET}
                    aws:
                      secretsManager:
                        argocdServiceAccountName: external-secrets
                        telemetryServiceAccountName: external-secrets
                        appServiceAccountName: external-secrets
                        crossplaneServiceAccountName: external-secrets
                telemetry:
                  jaeger:
                    storage:
                      es:
                        enabled: true
                        url: https://${ES_DOMAIN_ENDPOINT}
                        credentialsSecretName: ${ES_SECRET}
                      inMemory:
                        enabled: false
                rds:
                  host: ${RDS_HOST}
                apps:
                  - name: master-app
                    repoURL: https://github.com/jdotw/isvanilla.git
                    targetRevision: HEAD
                    path: argocd/master-app

            set: 
              # - name: externalDatabase.host
              #   valueFrom: 
              #     secretKeyRef: 
              #       name: 
              #       namespace: crossplane-system
              #       key: endpoint
              # - name: externalDatabase.user
              #   valueFrom: 
              #     secretKeyRef: 
              #       name: 
              #       namespace: crossplane-system
              #       key: username
              # - name: externalDatabase.password
              #   valueFrom: 
              #     secretKeyRef: 
              #       name: 
              #       namespace: crossplane-system
              #       key: password
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        # - fromFieldPath: "metadata.uid"
        #   toFieldPath: spec.forProvider.set[0].valueFrom.secretKeyRef.name
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "%s-mysql"
        # - fromFieldPath: "metadata.uid"
        #   toFieldPath: spec.forProvider.set[1].valueFrom.secretKeyRef.name
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "%s-mysql"
        # - fromFieldPath: "metadata.uid"
        #   toFieldPath: spec.forProvider.set[2].valueFrom.secretKeyRef.name
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "%s-mysql"